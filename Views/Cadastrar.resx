<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAog0AAAJNU0Z0AUkBTAIBAQQB
        AAFQAQABUAEAARABAAEQAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABQAMAASADAAEBAQABIAYAASD/
        AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/ADYAAwsBDgQCDAADAgEDFAADOAFbAWsBWQFAAf8B
        awFZAUAB/wGsAZ8BjwH/AeAB1gHNAf8B4AHWAc0B/wHgAdYBzQH/AeYB4AHaAf8B5QHeAdcB/wHgAdYB
        zQH/AeAB1gHNAf8B4AHWAc0B/wGtAZ8BjwH/AWsBWQFAAf8BawFZAUAB/wM3AVqMAAMRARYDUQGeAzUB
        9QNVAa0DCAEKAwIBAwNGAX8DLgH4A08BmwMPARQMAAM4AVsBawFZAUAB/wFrAVkBQAH/Ab8BswGlAf8B
        4AHWAc0B/wHgAdYBzQH/AeAB1gHNAf8B5gHfAdkB/wHmAd8B2QH/AeAB1gHNAf8B4AHWAc0B/wHgAdYB
        zQH/Ab8BswGmAf8BawFZAUAB/wFrAVkBQAH/AzgBW0QAAzgBXAFmAWUBWwHdAloBVwHCA0sBjQFnAWMB
        XAHfAWcBYwFdAd8BZwFjAV0B3wJjAV8B1QM1AVUCXAFZAcEBxgFxAU0B+gFlAWMBXwHaAzUBVRAAAwYB
        BwNbAeADRwGCAw4BEgNQAZwDSgHvA1AB7QNXAbkDGQEjA0sBjANaAd8DBgEHCAADNgFYAWsBWQFAAf8B
        awFZAUAB/wHRAcYBvAH/AeAB1gHNAf8B4AHWAc0B/wHgAdYBzQH/AeAB1gHNAf8B4AHWAc0B/wHgAdYB
        zQH/AeAB1gHNAf8B4AHWAc0B/wHSAccBvAH/AWsBWQFAAf8BawFZAUAB/wM2AVgDQgF1A1YBsANTAaoD
        UwGqA1MBqgNTAaoDUwGqA1MBqgNTAaoDUwGqA1MBqgNTAaoDUwGqA1MBqgNWAbADQgF1BAACVAFTAaYB
        /wG3AQcB/wGSAXwBTQHxAmEBXQHRAf8BoAEbAv8BmAEhAv8BkAEnAf8DSQGHAXQBZgFfAeUB/wF5ATsB
        /wJfAV0ByQH/AWkBRwH/Ad4BVgFDAf0DKAE7DAADAwEEA1IB6gMRARYIAAMJAQsDDAEQCAADDwETA0oB
        7wMDAQQIAAMdASgBdQFjAUsB/gFrAVkBQAH/Aa8BogGSAf8BvgGxAaQB/wG6Aa0BoAH/Ad0B1QHNAf8B
        zAHJAdsB/wHMAckB2wH/Ad0B1QHNAf8BugGtAaAB/wG+AbEBpAH/AbABogGTAf8BawFZAUAB/wFgAU4B
        QAH9AxsBJQNWAbA4AANWAbAEAAJSAVEBpAH/AbcBBwL/Aa8BDgL/AacBFAL/AaABGwL/AZgBIQL/AZAB
        JwH/AkcBRgGAAf8BgAE0Af8CYQFdAc8DOwFiAlwBWQHDAcYBVgFNAfoDTwGXEAADWgHiAxUBHRgAAxAB
        FQNQAe0DAwEEDAADRAF5AWABTgFAAf0BawFZAUAB/wFiAU8BNwH/AV4BSgEzAf8B2wHYAdUB/wGfAawB
        +QH/AZ0BqgH6Af8B2gHXAdMB/wFeAUoBMwH/AWMBTwE4Af8BawFZAUAB/wFrAU4BTQH6AkEBQAFwBAAD
        UwGqBAADHwEsEAADHwEsBAADIwEyAzUBVQM1AVUDNQFVAzIBTwQAA1MBqgQAAkIBQQFzAf8BtwEHAv8B
        rwEOAv8BpwEUAv8BoAEbAv8BmAEhAv8BkAEnAf8CRwFGAYAB/wGAATQB/wJfAVwByAM5AV4CWQFXAbwB
        uwFoAU4B+QNPAZkIAAMDAQQDQwF3A1kBxgQAAwYBBwNNAZIDRgHwA0YB8ANNAZMDBgEHBAADWAG4A0wB
        kQMLAQ4MAAMbASUCTwFOAZcBYwFgAUgB9gFfAUsBNAH/AecB5gHlAf8BnQHTAfUB/wGeAdAB8AH/AeYB
        5QHkAf8BXwFLATQB/wJgAVMB8wNMAY4DFgEdCAADUwGqBAADVAGrEAADVAGrBAADIwEzAzUBVQM1AVUD
        NQFVAzIBTwQAA1MBqgQAAwgBCgJcAVkBwQH/Aa8BDgL/AacBFAL/AaABGwL/AZgBIQL/AZABJwH/A0gB
        hAF2AWkBWwHoAf8BeQE7Af8CXAFaAcQB/wFpAUcB/wHpAWsBWQH+AykBPgQAAykBPQNKAe8DWAG4AxQB
        GwQAA00BkwNVAa8DEQEWAxEBFgNVAa8DTQGTBAADDwETA1IBqANFAfIDKgE/EAADEQEWA0gBhAGBAckB
        9gH/AVMBvwH3Af8BVAG8AfAB/wGCAcMB6gH/AkcBRgGBAw4BEhAAA1MBqgQAA1MBqgM7AWMDNQFVAzUB
        VQM7AWMDUwGqHAADUwGqCAAEAgMuAUgDUQGeAYMBcAFUAe0B/wGYASEC/wGQAScB/wGVAXEBUwHyAz4B
        agJfAV0ByQHpAXwBTAH+AWwBZQFeAeIDOAFcCAADRAF6A0gBhAwAA0YB8AMRARYIAAMRARYDRgHwDAAD
        SQGHA0MBdxQAAwgBCgFXAckB/QH/AVwB0QL/AVwB0QL/AVgBxQH3Af8DCAEKFAADUwGqBAADBwEJAzEB
        TQM1AVUDNQFVAzEBTQMHAQkEAAM7AWUDUwGqA1MBqgNTAaoDUQGeBAADUwGqFAADBAEFAywBQwM+AWoD
        MQFOAwwBEAQAAwMBBBAAA0QBeQNJAYcMAANGAfADEQEWCAADEQEWA0YB8AwAA0kBhwNEAXkUAAM3AVoB
        XAHRAv8BXAHRAv8BXAHRAv8BXAHRAv8DNAFUFAADUwGqCAADJAE0A1gBuANYAbgDJAE0IAADUwGqFAAD
        NAFTAmMBXwHVAekBgAEyAf4BdgFpAVsB6ANEAXgEAhQAAzABSgNRAewDTQGTAwsBDgQAA00BkwNVAa8D
        EQEWAxEBFgNVAa8DTQGTBAADCAEKA00BkgNKAe8DLgFHEAADCgENAV0CYQHPAVwB0QL/AVwB0QL/AVwB
        0QL/AVwB0QL/AVwCXwHLAwkBDBAAA1MBqggAA1EBoQMMAQ8DDAEPA1EBoSAAA1MBqhAAAy8BSQHpAYoB
        JgH+Af8BmAEhAv8BkAEnAv8BiAEuAv8BgAE0Af8CRwFGAYAYAAMbASUDUAGdA1gBugQAAwYBBwNNAZMD
        RgHwA0cB8QNNAZMDBgEHBAADUQGhA1IBqAMVARwUAAM2AVkBWwHJAfUB/wFcAdEC/wFcAdEC/wFcAdEC
        /wFcAdEC/wFbAcgB8wH/AzYBWBAAA1MBqggAAzwBZgNKAYoDSgGKAzwBZggAAzsBZQNTAaoDUwGqA1MB
        qgNRAZ4EAANTAaoQAAJaAVgBvQH/AaABGwL/AZgBIQL/AZABJwL/AYgBLgL/AYABNAH/AZkBbwFSAfMD
        BgEHGAADAgEDA1oB4gMbASUYAAMGAQgDPQH0AwkBDBgAAy4BSAFcAboB3AH/AVwB0QL/AVwB0QL/AVwB
        0QL/AVwB0QL/AVwBugHdAf8DLgFGEAADUwGqDAADJgE5AycBOiQAA1MBqhAAAWcBYwFcAd8B/wGgARsC
        /wGYASEC/wGQAScC/wGIAS4C/wGAATQC/wF5ATsB/wMXAR8cAANbAdgDIAEtGAADBgEIAz0B9AMGAQgY
        AAJAAT8BbgFdAY8BmwH/AVwB0QL/AVwB0QL/AVwB0QL/AVwB0QL/AV0BkQGeAf8DPwFsEAADVgGwOAAD
        VgGwEAACWgFYAboB/wGgARsC/wGYASEC/wGQAScC/wGIAS4C/wGAATQB/wGSAXABWAHxAwUBBhwAA10B
        3ANKAYsDEAEVA0wBkQNGAfADRgHwA0wBkQMQARUDSgGJA10B4QMJAQsYAAMzAVEBXQFqAWMB/wFdAYQB
        iwH/Al4BUQH/AV4BTQE3Af8BXgFaAUsB/wFeAVoBTAH/Az4BaxAAA0IBdQNWAbADUwGqA1MBqgNTAaoD
        UwGqA1MBqgNTAaoDUwGqA1MBqgNTAaoDUwGqA1MBqgNTAaoDVgGwA0IBdRAAAy0BRAHeAZ8BMQH9Af8B
        mAEhAv8BkAEnAv8BiAEuAv8BgAE0Af8DRAF5IAADEQEWA1ABnwM0AfcDVgGwAxIBFwMSARcDVQGvAzQB
        9wNQAZ8DEQEWHAADAgEDAVwCWgHEAV4BSgEzAf8BXgFKATMB/wFeAUoBMwH/AV4BSgEzAf8BXgJcAcsD
        CQEMZAADMAFLAl8BXAHLAcYBfQEyAfoBZwFjAV0B3wJAAT8BbgQBKAADCgENBAEIAAQBAwoBDSgAAxEB
        FgNTAacBWgFZAUgB9QFgAVYBUAHzA1MBpwMRARaUAAFCAU0BPgcAAT4DAAEoAwABQAMAASADAAEBAQAB
        AQYAAQEWAAP/gQAB+QHfAgAE/wHgAQcCAAL/AYABAwHAAQMEAAGAAQEBxgFjAgABfwH+AYABAQHnAeMB
        gAEBAV4BggGAAQEBiAERAcABAwFeAYIBgAEBAQgBEAHwAQ8BQAH+AcABAwE5AZwB+AEfAUABggH4AS8B
        OQGcAfgBHwFhAf4B+AEfAQgBEAHwAQ8BYQH+AfABHwGIAREB8AEPAWEBggHwAQ8BxwHjAfABDwFzAf4B
        8AEPAecB4wHwAQ8BfwH+AfABDwHgAQMB8AEPAgAB8AEfAeABBwHwAQ8C/wH4AR8B+QGfAfgBHwT/Cw==
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>45</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGBgAAAEACADIBgAAFgAAACgAAAAYAAAAMAAAAAEACAAAAAAAoAIAAAAAAAAAAAAAAAEAAAAA
        AAASjCMAIcBPAB/GWAAfyFsAGeCEABuuQgAfxloAEt5/AB7RawCK/84AHs5mABzVcQAxwVcAIcVVAB7Q
        aAAe0GkAH8ldAB7RbQAfy2AAH8leABzYdgAe024AXMt8AB7DUwAfxlcAC28NACHATQAiw00AGNVwAG7l
        oAALbw8AHNZ0ABzTcAAhwlAAH81iACG+TAAZ3oEAHMxhACLCSwAc024AIcJPAB/FVwAb23wAIcNTABnD
        XgAewlIALLtTABzVcwAfzWMAGeCDACG+SgAY1HEAcvKvAFXwogBT8qUAJ400AB2sOwAggykAHNZzABjR
        bQBv7qoAKJA1AFXtnwAb23sAEIAcABzZeAAfyF0AT/SnAG3qpgBM76MAF9p5AG7RhABv1YwAG9l5ABKD
        HQAcqjsAGc9tAB7TbQAdz2gAcOymABvGWAAby2gAEocgABvIZAAfzWUAT+2cAFLgiQAbyV8AT+6eABKO
        JgApljsActKIACmbPgAX2HcAGNd2ABnScwAcqzwAbtCGAG7QhAAZ1G8AHK8/AG7wqgAcrT4AFNNwACiT
        OAAb2XgAHKg5ABncfgBO8KIAG9x+ABKLIwAfzmUAG8dbAGz/vQBu0ocAVeKKAFTjjwAU2ncAG8ZaAEbO
        eABT6JoAUuCIAHDsqAAfy14AbvCsAB3NZAAbyV0AIcNVAFLiiwBP7p8AUeubABvTcAAX2HUAUuONACue
        QQBS3YYAJJ48AB6YMgAbtE0AGnUcAAhrCwD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAjo6Ojo6Ojo6Lix4eGRmMjI6Ojo6Ojo6Ojo6Ojo6Ojo6LWxsbJiY4jI6Ojo6Ojo6Ojo6Ojo6O
        jo6LYhojMjJqjI6Ojo6Ojo6Ojo6Ojo6Ojo6LRwEBGiNLjI6Ojo6Ojo6Ojo6Ojo6Ojo6LYSEoAQFgjI6O
        jo6Ojo6Ojo6Ojo6Ojo6LchctIShmjI6Ojo6Ojo6Ojo6Ojo6Ojo6LSA0rFy1kjI6Ojo6Ojo6Ojo6Ojo6O
        jo6LFgIYDX8FjI6Ojo6Ojo6OOYuLi4uLi4uMFgMGAgIFjIyMjIyMjIyMN3eKioqKioqKFhMQAwYFBYqK
        ioqKigVAPT47FREIDw4KMCISExADBgICKQ0rFwFKaDUzLwsnEQgPDgpUIhITEAMDGAIpDQFSWjaEFB8v
        CydNCA8OCm8wEnsQQgMGAgFuXEN1Rl1eMxxjgxUIDw4KfSVXfnB2UAZZhnFFbIFYVYJ4HAsgFRFOJXSF
        gFZ5h3OJiIiIiIiIiIiIHRQ6CyAsAAAAAAAAAAAAjo6Ojo6Ojo6JHUlBFB8siY6Ojo6Ojo6Ojo6Ojo6O
        jo6JRG0qP2lTiY6Ojo6Ojo6Ojo6Ojo6Ojo6JTzEkaypRiY6Ojo6Ojo6Ojo6Ojo6Ojo6JegQEMSRMiY6O
        jo6Ojo6Ojo6Ojo6Ojo6JPAQEBARfiY6Ojo6Ojo6Ojo6Ojo6Ojo6JZQcHBwdniY6Ojo6Ojo6Ojo6Ojo6O
        jo6IfAkJCQk0iI6Ojo6Ojo6Ojo6Ojo6Ojo6ILgwMDAwuiI6Ojo6Ojo6O/wD/AP8A/wD/AP8A/wD/AP8A
        /wD/AP8A/wD/AP8A/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8A/wD/AP8A/wD/AP8A
        /wD/AP8A/wD/AP8A/wD/AP8A
</value>
  </data>
</root>